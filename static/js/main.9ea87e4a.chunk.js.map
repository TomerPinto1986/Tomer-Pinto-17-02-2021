{"version":3,"sources":["services/storageService.js","services/weatherService.js","cmps/Header/Header.jsx","store/actions/weatherActions.js","cmps/FavoritesList/FavoritesList.jsx","pages/Favorites/Favorites.jsx","cmps/LocationSearch/LocationSearch.jsx","cmps/WeatherPreview/WeatherPreview.jsx","cmps/WeeklyList/WeeklyList.jsx","pages/HomePage/HomePage.jsx","App.jsx","reportWebVitals.js","store/reducers/weatherReducer.js","store/index.js","index.js"],"names":["storageService","saveToStorage","key","data","localStorage","setItem","JSON","stringify","loadFromStorage","parse","getItem","API_KEY","WEATHER_KEY","FAVORITES","gFavorites","weatherService","getCurrWeather","addToFavorites","city","push","removeFromFavorites","id","cityIdx","findIndex","splice","isFavorite","some","getFavorites","console","log","q","a","weather","axios","Key","todayWeather","weeklyWeather","LocalizedName","today","weekly","mapDispatchToProps","changeUnits","units","dispatch","type","connect","props","onChangeUnits","className","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","Link","href","NavDropdown","title","Item","onClick","FavoritesList","favorites","onChangeCurrWeather","tempratureToShow","Temperature","Metric","Value","Imperial","map","Card","style","width","Title","Text","setCurrWeather","currWeather","state","weatherReducer","useState","setFavorites","useEffect","history","LocationSearch","onSubmit","search","setSearch","Form","inline","e","preventDefault","FormControl","placeholder","value","onChange","target","Button","variant","WeatherPreview","toggleFavorite","favBtnText","WeatherText","WeeklyList","moment","Date","format","min","Minimum","max","Maximum","Math","floor","EpochDate","addCityToFavorites","setFavBtnText","term","DailyForecasts","App","component","Favorites","path","HomePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ea87e4a.chunk.js","sourcesContent":["export const storageService = {\r\n    saveToStorage,\r\n    loadFromStorage\r\n}\r\n\r\nfunction saveToStorage(key, data) {\r\n    localStorage.setItem(key,JSON.stringify(data));\r\n};\r\n\r\nfunction loadFromStorage(key){\r\n    return JSON.parse(localStorage.getItem(key)); \r\n}","import axios from \"axios\";\r\nimport { storageService } from \"./storageService\";\r\n\r\nconst API_KEY = \"bouPb7Ob1dDQ3V3OvFX3udSa8KKD2QYq\";\r\nconst WEATHER_KEY = \"weather\";\r\nconst FAVORITES = \"favorites\";\r\nconst gFavorites = storageService.loadFromStorage(FAVORITES) || [];\r\n\r\nexport const weatherService = {\r\n    getCurrWeather,\r\n    addToFavorites,\r\n    removeFromFavorites,\r\n    isFavorite,\r\n    getFavorites,\r\n};\r\n\r\nfunction getFavorites() {\r\n    console.log(gFavorites);\r\n    return gFavorites;\r\n}\r\n\r\nfunction isFavorite(id) {\r\n    return gFavorites.some((city) => city.id === id);\r\n}\r\n\r\nfunction addToFavorites(city) {\r\n    gFavorites.push(city);\r\n    storageService.saveToStorage(FAVORITES, gFavorites);\r\n    return gFavorites;\r\n}\r\n\r\nfunction removeFromFavorites(id) {\r\n    const cityIdx = gFavorites.findIndex((city) => city.id === id);\r\n    if (cityIdx !== -1) {\r\n        gFavorites.splice(cityIdx, 1);\r\n        storageService.saveToStorage(FAVORITES, gFavorites);\r\n        return gFavorites;\r\n    } else return -1;\r\n}\r\n\r\nasync function getCurrWeather(q) {\r\n    let weather = storageService.loadFromStorage(WEATHER_KEY);\r\n    if (weather) return weather;\r\n    try {\r\n        const city = await axios(\r\n            `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${q}`\r\n        );\r\n        const todayWeather = await axios(\r\n            `http://dataservice.accuweather.com/currentconditions/v1/${city.data[0].Key}?apikey=${API_KEY}`\r\n        );\r\n        const weeklyWeather = await axios(\r\n            `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${city.data[0].Key}?apikey=${API_KEY}&metric=true`\r\n        );\r\n        weather = {\r\n            id: city.data[0].Key,\r\n            city: city.data[0].LocalizedName,\r\n            today: todayWeather.data[0],\r\n            weekly: weeklyWeather.data,\r\n        };\r\n        storageService.saveToStorage(WEATHER_KEY, weather);\r\n        return weather;\r\n    } catch (err) {\r\n        console.log(\"Error\", err);\r\n        throw err;\r\n    }\r\n}\r\n","import React from \"react\";\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { changeUnits } from \"../../store/actions/weatherActions\";\n\nimport \"./Header.scss\";\n\nconst Header = (props) => {\n    function onChangeUnits(units) {\n        props.changeUnits(units);\n    }\n    return (\n        <header className=\"header\">\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"#/\">Home</Nav.Link>\n                        <Nav.Link href=\"#favorites\">Favorites</Nav.Link>\n                        <NavDropdown\n                            title=\"&deg;F / &deg;C\"\n                            id=\"basic-nav-dropdown\"\n                        >\n                            <NavDropdown.Item\n                                onClick={() => onChangeUnits(\"c\")}\n                            >\n                                Celsius\n                            </NavDropdown.Item>\n                            <NavDropdown.Item\n                                onClick={() => onChangeUnits(\"f\")}\n                            >\n                                Fahrenheit\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </header>\n    );\n};\n\nconst mapDispatchToProps = {\n    changeUnits,\n};\n\nexport default connect(null, mapDispatchToProps)(Header);\n","import { weatherService } from \"../../services/weatherService\";\r\n\r\nexport function getCurrWeather(city) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const currWeather = await weatherService.getCurrWeather(city);\r\n            dispatch({ type: \"SET_CURR_WEATHER\", currWeather });\r\n            return currWeather;\r\n        } catch (err) {\r\n            console.log(\"Error\", err);\r\n            throw err;\r\n        }\r\n    };\r\n}\r\n\r\nexport function setCurrWeather(currWeather) {\r\n    return (dispatch) => {\r\n        dispatch({ type: \"SET_CURR_WEATHER\", currWeather });\r\n    };\r\n}\r\n\r\nexport function addCityToFavorites(city) {\r\n    return async (dispatch) => {\r\n        const favorites = weatherService.addToFavorites(city);\r\n        dispatch({ type: \"UPDATE_FAVORITES\", favorites });\r\n        return favorites;\r\n    };\r\n}\r\n\r\nexport function removeFromFavorites(id) {\r\n    return async (dispatch) => {\r\n        const favorites = weatherService.removeFromFavorites(id);\r\n        dispatch({ type: \"UPDATE_FAVORITES\", favorites });\r\n        return favorites;\r\n    };\r\n}\r\n\r\nexport function changeUnits(units) {\r\n    return (dispatch) => {\r\n        dispatch({ type: \"CHANGE_UNITS\", units });\r\n    };\r\n}\r\n","import \"./FavoritesList.scss\";\nimport Card from \"react-bootstrap/Card\";\n\nconst FavoritesList = ({ favorites, onChangeCurrWeather, units }) => {\n    function tempratureToShow(weather) {\n        console.log(weather);\n        return units === \"c\"\n            ? `${weather.Temperature.Metric.Value} \\u00b0C`\n            : `${weather.Temperature.Imperial.Value} \\u00b0F`;\n    }\n\n    return (\n        <section className=\"favorites-list flex wrap justify-center\">\n            {favorites &&\n                favorites.map((weather) => {\n                    return (\n                        <Card\n                            style={{ width: \"18rem\" }}\n                            className=\"flex column align-center\"\n                            key={weather.id}\n                            onClick={() => onChangeCurrWeather(weather)}\n                        >\n                            <Card.Title>{weather.city}</Card.Title>\n                            <Card.Text>\n                                {tempratureToShow(weather.today)}\n                            </Card.Text>\n                        </Card>\n                    );\n                })}\n        </section>\n    );\n};\n\nexport default FavoritesList;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FavoritesList from \"../../cmps/FavoritesList/FavoritesList\";\nimport { setCurrWeather } from \"../../store/actions/weatherActions\";\n\nimport \"./Favorites.scss\";\n\nconst Favorites = (props) => {\n    const [favorites, setFavorites] = useState(null);\n    useEffect(() => {\n        setFavorites(props.favorites);\n    });\n\n    function changeCurrWeather(weather) {\n        props.setCurrWeather(weather);\n        props.history.push(\"/\");\n    }\n\n    return (\n        <div className=\"favorites flex column align-center\">\n            <h2>Favorites Locations</h2>\n            {favorites && (\n                <FavoritesList\n                    favorites={favorites}\n                    onChangeCurrWeather={changeCurrWeather}\n                    units={props.units}\n                />\n            )}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        favorites: state.weatherReducer.favorites,\n        units: state.weatherReducer.units,\n    };\n};\n\nconst mapDispatchToProps = {\n    setCurrWeather,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Form, FormControl, Button } from \"react-bootstrap\";\n\nimport \"./LocationSearch.scss\";\n\nconst LocationSearch = ({ onSubmit }) => {\n    const [search, setSearch] = useState(\"\");\n\n    function handleChange(e) {\n        setSearch(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(\"submiting\");\n        onSubmit(search);\n    }\n\n    return (\n        <section className=\"location-search\">\n            <Form inline onSubmit={handleSubmit}>\n                <FormControl\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    className=\"mr-sm-2\"\n                    value={search}\n                    onChange={handleChange}\n                />\n                <Button variant=\"outline-success\">Search</Button>\n            </Form>\n        </section>\n    );\n};\n\nexport default LocationSearch;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nimport \"./WeatherPreview.scss\";\n\nconst WeatherPreview = ({\n    weather,\n    city,\n    toggleFavorite,\n    favBtnText,\n    units,\n}) => {\n    function tempratureToShow() {\n        return units === \"c\"\n            ? `${weather.Temperature.Metric.Value} \\u00b0C`\n            : `${weather.Temperature.Imperial.Value} \\u00b0F`;\n    }\n    return (\n        <Card\n            style={{ width: \"18rem\" }}\n            className=\"weather-preview flex column align-center\"\n        >\n            <Card.Title>{city}</Card.Title>\n            <i onClick={toggleFavorite} className={favBtnText}></i>\n            <Card.Text>{tempratureToShow()}</Card.Text>\n            <Card.Title>{weather.WeatherText}</Card.Title>\n        </Card>\n    );\n};\n\nexport default WeatherPreview;\n","import React from \"react\";\nimport moment from \"moment\";\nimport Card from \"react-bootstrap/Card\";\n\nimport \"./WeeklyList.scss\";\n\nconst WeeklyList = ({ WeeklyList, units }) => {\n    function tempratureToShow(min, max) {\n        return units === \"c\"\n            ? `${min} - ${max} \\u00b0C`\n            : `${Math.floor(min * 1.8 + 32)} - ${Math.floor(\n                  max * 1.8 + 32\n              )} \\u00b0F`;\n    }\n\n    return (\n        <section className=\"weekly-list flex wrap justify-center\">\n            {WeeklyList.map((weather) => {\n                return (\n                    <Card\n                        style={{ width: \"18rem\" }}\n                        className=\"weather-preview flex column align-center\"\n                        key={weather.EpochDate}\n                    >\n                        <Card.Title>\n                            {moment(weather.Date).format(\"ddd\")}\n                        </Card.Title>\n                        <Card.Text>\n                            {tempratureToShow(\n                                weather.Temperature.Minimum.Value,\n                                weather.Temperature.Maximum.Value\n                            )}\n                        </Card.Text>\n                    </Card>\n                );\n            })}\n        </section>\n    );\n};\n\nexport default WeeklyList;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport LocationSearch from \"../../cmps/LocationSearch/LocationSearch\";\nimport WeatherPreview from \"../../cmps/WeatherPreview/WeatherPreview\";\nimport WeeklyList from \"../../cmps/WeeklyList/WeeklyList\";\nimport { weatherService } from \"../../services/weatherService\";\nimport {\n    getCurrWeather,\n    addCityToFavorites,\n    removeFromFavorites,\n} from \"../../store/actions/weatherActions\";\n\nimport \"./HomePage.scss\";\n\nconst HomePage = (props) => {\n    const [favBtnText, setFavBtnText] = useState(\"\");\n\n    useEffect(() => {\n        if (props.currWeather) {\n            setFavBtnText(\n                weatherService.isFavorite(props.currWeather.id)\n                    ? \"favorite fas fa-star\"\n                    : \"favorite far fa-star\"\n            );\n        } else {\n            (async function getWether() {\n                try {\n                    const currWeather = await props.getCurrWeather(\"tel-aviv\");\n                    setFavBtnText(\n                        weatherService.isFavorite(currWeather.id)\n                            ? \"favorite fas fa-star\"\n                            : \"favorite far fa-star\"\n                    );\n                } catch (err) {\n                    console.log(\"Error\", err);\n                }\n            })();\n        }\n    }, []);\n\n    async function handleSubmit(term) {\n        try {\n            await props.getCurrWeather(term);\n        } catch (err) {\n            console.log(\"Error\", err);\n        }\n    }\n\n    function toggleFavorite() {\n        weatherService.isFavorite(props.currWeather.id)\n            ? props.removeFromFavorites(props.currWeather.id)\n            : props.addCityToFavorites(props.currWeather);\n        toggleAddRemove();\n    }\n\n    function toggleAddRemove() {\n        setFavBtnText(\n            weatherService.isFavorite(props.currWeather.id)\n                ? \"favorite fas fa-star\"\n                : \"favorite far fa-star\"\n        );\n    }\n\n    return (\n        <div className=\"home-page   \">\n            {props.currWeather && (\n                <div>\n                    <span className=\"header flex space-between\">\n                        <span className=\"flex column align-center\">\n                            <WeatherPreview\n                                weather={props.currWeather.today}\n                                city={props.currWeather.city}\n                                favBtnText={favBtnText}\n                                toggleFavorite={toggleFavorite}\n                                units={props.units}\n                            />\n                        </span>\n                        <LocationSearch onSubmit={handleSubmit} />\n                    </span>\n                    <WeeklyList\n                        WeeklyList={props.currWeather.weekly.DailyForecasts}\n                        units={props.units}\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        currWeather: state.weatherReducer.currWeather,\n        units: state.weatherReducer.units,\n    };\n};\n\nconst mapDispatchToProps = {\n    getCurrWeather,\n    addCityToFavorites,\n    removeFromFavorites,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./cmps/Header/Header\";\nimport Favorites from \"./pages/Favorites/Favorites\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport \"./assets/styles/global.scss\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Header />\n                <Switch>\n                    <Route component={Favorites} path=\"/favorites\" />\n                    <Route component={HomePage} path=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { weatherService } from \"../../services/weatherService\";\r\n\r\nconst INITIAL_STATE = {\r\n    currWeather: null,\r\n    favorites: weatherService.getFavorites(),\r\n    units: \"c\",\r\n};\r\n\r\nexport function weatherReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case \"SET_CURR_WEATHER\":\r\n            return { ...state, currWeather: action.currWeather };\r\n        case \"UPDATE_FAVORITES\":\r\n            return { ...state, favorites: action.favorites };\r\n        case \"CHANGE_UNITS\":\r\n            return { ...state, units: action.units };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport { weatherReducer } from './reducers/weatherReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({weatherReducer});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}