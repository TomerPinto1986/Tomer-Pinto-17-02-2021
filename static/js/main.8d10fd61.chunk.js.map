{"version":3,"sources":["services/storageService.js","services/weatherService.js","cmps/Header/Header.jsx","store/actions/weatherActions.js","cmps/FavoritesList/FavoritesList.jsx","pages/Favorites/Favorites.jsx","cmps/LocationSearch/LocationSearch.jsx","cmps/WeatherPreview/WeatherPreview.jsx","cmps/WeeklyList/WeeklyList.jsx","pages/HomePage/HomePage.jsx","App.jsx","reportWebVitals.js","store/reducers/weatherReducer.js","store/index.js","index.js"],"names":["storageService","saveToStorage","key","data","localStorage","setItem","JSON","stringify","loadFromStorage","parse","getItem","API_KEY","WEATHER_KEY","FAVORITES","gFavorites","weatherService","getGeoWeather","getCurrWeather","addToFavorites","city","push","removeFromFavorites","id","cityIdx","findIndex","splice","isFavorite","some","getFavorites","getPosition","Promise","success","error","navigator","geolocation","getCurrentPosition","a","position","latitude","coords","longitude","axios","res","LocalizedName","currWeather","q","weather","Key","todayWeather","weeklyWeather","today","weekly","console","log","mapDispatchToProps","changeUnits","units","dispatch","type","changeTheme","theme","connect","state","isDark","weatherReducer","props","onChangeUnits","onChangeTheme","themeMode","className","Navbar","bg","variant","expand","Toggle","aria-controls","Collapse","Nav","Link","href","NavDropdown","title","Item","onClick","FavoritesList","favorites","onChangeCurrWeather","tempratureToShow","Temperature","Metric","Value","Imperial","map","Card","style","width","text","Title","Img","src","WeatherIcon","Text","setCurrWeather","useState","setFavorites","useEffect","history","LocationSearch","onSearch","search","setSearch","errorMsg","setErrorMsg","handleSubmit","e","preventDefault","length","test","setTimeout","Form","inline","onSubmit","FormControl","placeholder","value","onChange","target","Button","WeatherPreview","toggleFavorite","favBtnText","WeatherText","WeeklyList","moment","Date","format","Day","Icon","min","Minimum","max","Maximum","Math","floor","EpochDate","addCityToFavorites","setFavBtnText","term","DailyForecasts","App","component","Favorites","path","HomePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d10fd61.chunk.js","sourcesContent":["export const storageService = {\r\n    saveToStorage,\r\n    loadFromStorage\r\n}\r\n\r\nfunction saveToStorage(key, data) {\r\n    localStorage.setItem(key,JSON.stringify(data));\r\n};\r\n\r\nfunction loadFromStorage(key){\r\n    return JSON.parse(localStorage.getItem(key)); \r\n}","import axios from \"axios\";\r\nimport { storageService } from \"./storageService\";\r\n\r\nconst API_KEY = \"8NA5Ftyk4oAhzjq8jptkfjL1Q17fkGQR\";\r\nconst WEATHER_KEY = \"weather\";\r\nconst FAVORITES = \"favorites\";\r\nconst gFavorites = storageService.loadFromStorage(FAVORITES) || [];\r\n\r\nexport const weatherService = {\r\n    getGeoWeather,\r\n    getCurrWeather,\r\n    addToFavorites,\r\n    removeFromFavorites,\r\n    isFavorite,\r\n    getFavorites,\r\n};\r\n\r\nfunction getFavorites() {\r\n    return gFavorites;\r\n}\r\n\r\nfunction isFavorite(id) {\r\n    return gFavorites.some((city) => city.id === id);\r\n}\r\n\r\nfunction addToFavorites(city) {\r\n    gFavorites.push(city);\r\n    storageService.saveToStorage(FAVORITES, gFavorites);\r\n    return gFavorites;\r\n}\r\n\r\nfunction removeFromFavorites(id) {\r\n    const cityIdx = gFavorites.findIndex((city) => city.id === id);\r\n    if (cityIdx !== -1) {\r\n        gFavorites.splice(cityIdx, 1);\r\n        storageService.saveToStorage(FAVORITES, gFavorites);\r\n        return gFavorites;\r\n    } else return -1;\r\n}\r\n\r\nfunction getPosition() {\r\n    return new Promise((success, error) => {\r\n        navigator.geolocation.getCurrentPosition(success, error);\r\n    });\r\n}\r\n\r\nasync function getGeoWeather() {\r\n    var position = await getPosition();\r\n    const { latitude } = position.coords;\r\n    const { longitude } = position.coords;\r\n    const res = await axios(\r\n        `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${latitude}%2C${longitude}`\r\n    );\r\n    const city = res.data.LocalizedName;\r\n    const currWeather = await getCurrWeather(city);\r\n    return currWeather;\r\n}\r\n\r\nasync function getCurrWeather(q) {\r\n    let weather = storageService.loadFromStorage(WEATHER_KEY);\r\n    // if (weather) return weather;\r\n    try {\r\n        const city = await axios(\r\n            `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${q}`\r\n        );\r\n        const todayWeather = await axios(\r\n            `https://dataservice.accuweather.com/currentconditions/v1/${city.data[0].Key}?apikey=${API_KEY}`\r\n        );\r\n        const weeklyWeather = await axios(\r\n            `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${city.data[0].Key}?apikey=${API_KEY}&metric=true`\r\n        );\r\n        weather = {\r\n            id: city.data[0].Key,\r\n            city: city.data[0].LocalizedName,\r\n            today: todayWeather.data[0],\r\n            weekly: weeklyWeather.data,\r\n        };\r\n        storageService.saveToStorage(WEATHER_KEY, weather);\r\n        return weather;\r\n    } catch (err) {\r\n        console.log(\"Error\", err);\r\n        throw err;\r\n    }\r\n}\r\n","import React from \"react\";\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { changeUnits, changeTheme } from \"../../store/actions/weatherActions\";\n\nimport \"./Header.scss\";\n\nconst Header = (props) => {\n    function onChangeUnits(units) {\n        props.changeUnits(units);\n    }\n\n    function onChangeTheme(theme) {\n        props.changeTheme(theme);\n    }\n\n    function themeMode() {\n        return props.isDark ? \"dark\" : \"light\";\n    }\n    return (\n        <header className=\"header\">\n            <Navbar bg={themeMode()} variant={themeMode()} expand=\"lg\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"#/\">Home</Nav.Link>\n                        <Nav.Link href=\"#favorites\">Favorites</Nav.Link>\n                        <NavDropdown\n                            title=\"&deg;F / &deg;C\"\n                            id=\"basic-nav-dropdown\"\n                        >\n                            <NavDropdown.Item\n                                onClick={() => onChangeUnits(\"c\")}\n                            >\n                                Celsius\n                            </NavDropdown.Item>\n                            <NavDropdown.Item\n                                onClick={() => onChangeUnits(\"f\")}\n                            >\n                                Fahrenheit\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"Theme\" id=\"basic-nav-dropdown1\">\n                            <NavDropdown.Item\n                                onClick={() => onChangeTheme(\"dark\")}\n                            >\n                                Dark\n                            </NavDropdown.Item>\n                            <NavDropdown.Item\n                                onClick={() => onChangeTheme(\"light\")}\n                            >\n                                Light\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </header>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isDark: state.weatherReducer.isDark,\n    };\n};\n\nconst mapDispatchToProps = {\n    changeUnits,\n    changeTheme,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import { weatherService } from \"../../services/weatherService\";\r\n\r\nexport function getCurrWeather(city) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const currWeather = await weatherService.getCurrWeather(city);\r\n            dispatch({ type: \"SET_CURR_WEATHER\", currWeather });\r\n            return currWeather;\r\n        } catch (err) {\r\n            console.log(\"Error\", err);\r\n            throw err;\r\n        }\r\n    };\r\n}\r\n\r\nexport function getGeoWeather() {\r\n    return async (dispatch) => {\r\n        try {\r\n            const currWeather = await weatherService.getGeoWeather();\r\n            dispatch({ type: \"SET_CURR_WEATHER\", currWeather });\r\n            return currWeather;\r\n        } catch (err) {\r\n            console.log(\"Error\", err);\r\n            throw err;\r\n        }\r\n    };\r\n}\r\n\r\nexport function setCurrWeather(currWeather) {\r\n    return (dispatch) => {\r\n        dispatch({ type: \"SET_CURR_WEATHER\", currWeather });\r\n    };\r\n}\r\n\r\nexport function addCityToFavorites(city) {\r\n    return async (dispatch) => {\r\n        const favorites = weatherService.addToFavorites(city);\r\n        dispatch({ type: \"UPDATE_FAVORITES\", favorites });\r\n        return favorites;\r\n    };\r\n}\r\n\r\nexport function removeFromFavorites(id) {\r\n    return async (dispatch) => {\r\n        const favorites = weatherService.removeFromFavorites(id);\r\n        dispatch({ type: \"UPDATE_FAVORITES\", favorites });\r\n        return favorites;\r\n    };\r\n}\r\n\r\nexport function changeUnits(units) {\r\n    return (dispatch) => {\r\n        dispatch({ type: \"CHANGE_UNITS\", units });\r\n    };\r\n}\r\n\r\nexport function changeTheme(theme) {\r\n    return (dispatch) => {\r\n        dispatch({ type: \"CHANGE_THEME\", theme });\r\n    };\r\n}\r\n","import \"./FavoritesList.scss\";\nimport Card from \"react-bootstrap/Card\";\n\nconst FavoritesList = ({ favorites, onChangeCurrWeather, units, isDark }) => {\n    function tempratureToShow(weather) {\n        return units === \"c\"\n            ? `${weather.Temperature.Metric.Value} \\u00b0C`\n            : `${weather.Temperature.Imperial.Value} \\u00b0F`;\n    }\n\n    function themeModeBg() {\n        return isDark ? \"dark\" : \"light\";\n    }\n    function themeModeTxt() {\n        return isDark ? \"light\" : \"dark\";\n    }\n\n    return (\n        <section className=\"favorites-list flex wrap justify-center\">\n            {favorites &&\n                favorites.map((weather) => {\n                    return (\n                        <Card\n                            style={{ width: \"18rem\" }}\n                            className=\"flex column align-center favorite-preview\"\n                            key={weather.id}\n                            onClick={() => onChangeCurrWeather(weather)}\n                            bg={themeModeBg()}\n                            text={themeModeTxt()}\n                        >\n                            <Card.Title>{weather.city}</Card.Title>\n                            <Card.Img\n                                variant=\"top\"\n                                src={`./icons/${weather.today.WeatherIcon}.png`}\n                            />\n                            <Card.Text>\n                                {tempratureToShow(weather.today)}\n                            </Card.Text>\n                        </Card>\n                    );\n                })}\n        </section>\n    );\n};\n\nexport default FavoritesList;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FavoritesList from \"../../cmps/FavoritesList/FavoritesList\";\nimport { setCurrWeather } from \"../../store/actions/weatherActions\";\n\nimport \"./Favorites.scss\";\n\nconst Favorites = (props) => {\n    const [favorites, setFavorites] = useState(null);\n    useEffect(() => {\n        setFavorites(props.favorites);\n    });\n\n    function changeCurrWeather(weather) {\n        props.setCurrWeather(weather);\n        props.history.push(\"/\");\n    }\n\n    function themeMode() {\n        return props.isDark\n            ? \"favorites dark flex column align-center\"\n            : \"favorites flex column align-center\";\n    }\n\n    return (\n        <div className={themeMode()}>\n            <h2>Favorites Locations</h2>\n            {favorites && (\n                <FavoritesList\n                    favorites={favorites}\n                    onChangeCurrWeather={changeCurrWeather}\n                    units={props.units}\n                    isDark={props.isDark}\n                />\n            )}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        favorites: state.weatherReducer.favorites,\n        units: state.weatherReducer.units,\n        isDark: state.weatherReducer.isDark,\n    };\n};\n\nconst mapDispatchToProps = {\n    setCurrWeather,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Form, FormControl, Button } from \"react-bootstrap\";\n\nimport \"./LocationSearch.scss\";\n\nconst LocationSearch = ({ onSearch, isDark }) => {\n    const [search, setSearch] = useState(\"\");\n    const [errorMsg, setErrorMsg] = useState(null);\n\n    function handleChange(e) {\n        setSearch(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        if (errorMsg) return;\n        e.preventDefault();\n        if (!search.length) {\n            setErrorMsg(\"Please enter a location name.\");\n            setTimeout(() => {\n                setErrorMsg(null);\n            }, 2000);\n        } else {\n            const myRe = /^[a-zA-Z]+$/;\n            const valid = myRe.test(search);\n            if (valid) {\n                onSearch(search);\n            } else {\n                setErrorMsg(\"Only English letters are allowed.\");\n                setTimeout(() => {\n                    setErrorMsg(null);\n                }, 2000);\n            }\n        }\n    }\n\n    function themeMode() {\n        return isDark ? \"outline-light\" : \"outline-dark\";\n    }\n\n    return (\n        <section className=\"location-search\">\n            <Form inline onSubmit={handleSubmit}>\n                <FormControl\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    className=\"mr-sm-2\"\n                    value={search}\n                    onChange={handleChange}\n                />\n                {!errorMsg && (\n                    <Button onClick={handleSubmit} variant={themeMode()}>\n                        Search\n                    </Button>\n                )}\n            </Form>\n            {errorMsg && <p>{errorMsg}</p>}\n        </section>\n    );\n};\n\nexport default LocationSearch;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nimport \"./WeatherPreview.scss\";\n\nconst WeatherPreview = ({\n    weather,\n    city,\n    toggleFavorite,\n    favBtnText,\n    units,\n    isDark,\n}) => {\n    function tempratureToShow() {\n        return units === \"c\"\n            ? `${weather.Temperature.Metric.Value} \\u00b0C`\n            : `${weather.Temperature.Imperial.Value} \\u00b0F`;\n    }\n\n    function themeModeBg() {\n        return isDark ? \"dark\" : \"light\";\n    }\n    function themeModeTxt() {\n        return isDark ? \"light\" : \"dark\";\n    }\n    return (\n        <Card\n            style={{ width: \"18rem\" }}\n            bg={themeModeBg()}\n            text={themeModeTxt()}\n            className=\"weather-preview flex column align-center\"\n        >\n            <Card.Title>{city}</Card.Title>\n            <Card.Img\n                variant=\"top\"\n                src={`./icons/${weather.WeatherIcon}.png`}\n            />\n            <i onClick={toggleFavorite} className={favBtnText}></i>\n            <Card.Text>{tempratureToShow()}</Card.Text>\n            <Card.Title>{weather.WeatherText}</Card.Title>\n        </Card>\n    );\n};\n\nexport default WeatherPreview;\n","import React from \"react\";\nimport moment from \"moment\";\nimport Card from \"react-bootstrap/Card\";\n\nimport \"./WeeklyList.scss\";\n\nconst WeeklyList = ({ WeeklyList, units, isDark }) => {\n    function tempratureToShow(min, max) {\n        return units === \"c\"\n            ? `${min} - ${max} \\u00b0C`\n            : `${Math.floor(min * 1.8 + 32)} - ${Math.floor(\n                  max * 1.8 + 32\n              )} \\u00b0F`;\n    }\n\n    function themeModeBg() {\n        return isDark ? \"dark\" : \"light\";\n    }\n    function themeModeTxt() {\n        return isDark ? \"light\" : \"dark\";\n    }\n\n    return (\n        <section className=\"weekly-list flex wrap justify-center\">\n            {WeeklyList.map((weather) => {\n                return (\n                    <Card\n                        style={{ width: \"18rem\" }}\n                        className=\"weather-preview flex column align-center\"\n                        key={weather.EpochDate}\n                        bg={themeModeBg()}\n                        text={themeModeTxt()}\n                    >\n                        <Card.Title>\n                            {moment(weather.Date).format(\"ddd\")}\n                        </Card.Title>\n                        <Card.Img\n                            variant=\"top\"\n                            src={`./icons/${weather.Day.Icon}.png`}\n                        />\n                        <Card.Text>\n                            {tempratureToShow(\n                                weather.Temperature.Minimum.Value,\n                                weather.Temperature.Maximum.Value\n                            )}\n                        </Card.Text>\n                    </Card>\n                );\n            })}\n        </section>\n    );\n};\n\nexport default WeeklyList;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport LocationSearch from \"../../cmps/LocationSearch/LocationSearch\";\nimport WeatherPreview from \"../../cmps/WeatherPreview/WeatherPreview\";\nimport WeeklyList from \"../../cmps/WeeklyList/WeeklyList\";\nimport { weatherService } from \"../../services/weatherService\";\nimport {\n    getCurrWeather,\n    addCityToFavorites,\n    removeFromFavorites,\n    getGeoWeather,\n} from \"../../store/actions/weatherActions\";\n\nimport \"./HomePage.scss\";\n\nconst HomePage = (props) => {\n    const [favBtnText, setFavBtnText] = useState(\"\");\n\n    useEffect(() => {\n        if (props.currWeather) {\n            setFavBtnText(\n                weatherService.isFavorite(props.currWeather.id)\n                    ? \"favorite fas fa-star\"\n                    : \"favorite far fa-star\"\n            );\n        } else {\n            (async function getWether() {\n                try {\n                    const currWeather = await props.getGeoWeather();\n                    setFavBtnText(\n                        weatherService.isFavorite(currWeather.id)\n                            ? \"favorite fas fa-star\"\n                            : \"favorite far fa-star\"\n                    );\n                } catch (err) {\n                    console.log(\"Error\", err);\n                }\n            })();\n        }\n    }, []);\n\n    async function handleSubmit(term) {\n        try {\n            const currWeather = await props.getCurrWeather(term);\n            setFavBtnText(\n                weatherService.isFavorite(currWeather.id)\n                    ? \"favorite fas fa-star\"\n                    : \"favorite far fa-star\"\n            );\n        } catch (err) {\n            console.log(\"Error\", err);\n        }\n    }\n\n    function toggleFavorite() {\n        weatherService.isFavorite(props.currWeather.id)\n            ? props.removeFromFavorites(props.currWeather.id)\n            : props.addCityToFavorites(props.currWeather);\n        toggleAddRemove();\n    }\n\n    function toggleAddRemove() {\n        setFavBtnText(\n            weatherService.isFavorite(props.currWeather.id)\n                ? \"favorite fas fa-star\"\n                : \"favorite far fa-star\"\n        );\n    }\n\n    function themeMode() {\n        return props.isDark ? \"home-page dark\" : \"home-page \";\n    }\n\n    return (\n        <div className={themeMode()}>\n            {props.currWeather && (\n                <div>\n                    <span className=\"header flex space-between\">\n                        <span className=\"flex column align-center\">\n                            <WeatherPreview\n                                weather={props.currWeather.today}\n                                city={props.currWeather.city}\n                                favBtnText={favBtnText}\n                                toggleFavorite={toggleFavorite}\n                                units={props.units}\n                                isDark={props.isDark}\n                            />\n                        </span>\n                        <LocationSearch\n                            isDark={props.isDark}\n                            onSearch={handleSubmit}\n                        />\n                    </span>\n                    <WeeklyList\n                        WeeklyList={props.currWeather.weekly.DailyForecasts}\n                        units={props.units}\n                        isDark={props.isDark}\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        currWeather: state.weatherReducer.currWeather,\n        units: state.weatherReducer.units,\n        isDark: state.weatherReducer.isDark,\n    };\n};\n\nconst mapDispatchToProps = {\n    getGeoWeather,\n    getCurrWeather,\n    addCityToFavorites,\n    removeFromFavorites,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./cmps/Header/Header\";\nimport Favorites from \"./pages/Favorites/Favorites\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport \"./assets/styles/global.scss\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Header />\n                <Switch>\n                    <Route component={Favorites} path=\"/favorites\" />\n                    <Route component={HomePage} path=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { weatherService } from \"../../services/weatherService\";\r\n\r\nconst INITIAL_STATE = {\r\n    currWeather: null,\r\n    favorites: weatherService.getFavorites(),\r\n    units: \"c\",\r\n    isDark: false,\r\n};\r\n\r\nexport function weatherReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case \"SET_CURR_WEATHER\":\r\n            return { ...state, currWeather: action.currWeather };\r\n        case \"UPDATE_FAVORITES\":\r\n            return { ...state, favorites: action.favorites };\r\n        case \"CHANGE_UNITS\":\r\n            return { ...state, units: action.units };\r\n        case \"CHANGE_THEME\":\r\n            return { ...state, isDark: action.theme === \"dark\" };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport { weatherReducer } from './reducers/weatherReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({weatherReducer});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}